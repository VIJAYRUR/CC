S3 - DYNAMO DB

- go to IAM in security 
- create a role function -lambda
- dynamodb full access

LAMBDA: 
- create 'author from scratch' function
- enter funtion name
- choose python
- choose the created role( existing role)
- create function

S3: 
- create a bucket 
- allow public access

LAMBDA: 
- open the function 
- add triggers (in config section)
- choose the created s3 bucket, select all event types

dynamoDB: 
- create a table 
- enter partition key, primary key 
- create a table with default setttings

import boto3
from uuid import uuid4
def lambda_handler(event, context):
    s3 = boto3.client("s3")

    dynamodb = boto3.resource('dynamodb')

    for record in event['Records']:
        bucket_name = record['s3']['bucket']['name']

        object_key = record['s3']['object']['key']
        size = record['s3']['object'].get('size', -1)

        event_name = record ['eventName']
        event_time = record['eventTime']

        dynamoTable = dynamodb.Table('newtable')
        dynamoTable.put_item(
            Item={'unique': str(uuid4()), 'Bucket': bucket_name, 'Object': object_key,'Size': size, 'Event': event_name, 'EventTime': event_time})

- add one item in s3
- it gets reflected in dynamo db table
